# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net


trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages:
- stage: Build
  jobs:
  - job : Initial_Build
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'winserviceartifact'
        publishLocation: 'pipeline'

- stage : Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:  
  - deployment: VMDeploy
    displayName: web
    environment:
      name:  winappAzureVM
      resourceType: VirtualMachine
      tags: AzureVM
    strategy: 
      runOnce:
          deploy:
            steps:
            - task: CopyFiles@2
              inputs:
                SourceFolder: '$(Pipeline.Workspace)/winserviceartifact/s/WinService/bin/Release'
                Contents: '**'
                TargetFolder: 'D:\winservice'
                OverWrite: true
            
            
            - task: PowerShell@2
              inputs:
                targetType: 'inline'
                script: |
                  sc.exe STOP txwinservice1
                  sc.exe DELETE txwinservice1
                  sc.exe CREATE txwinservice1 start= auto binPath= D:\winservice\WinService.exe
                  sc.exe START twinservice1
                              
